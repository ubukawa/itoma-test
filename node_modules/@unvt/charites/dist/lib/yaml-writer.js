"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeYaml = void 0;
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const js_yaml_1 = __importDefault(require("js-yaml"));
exports.writeYaml = (destinationPath, style, composite = false) => {
    if (composite === true) {
        writeCompositedYaml(destinationPath, style);
    }
    else {
        writeDecompositedYaml(destinationPath, style);
    }
};
const writeCompositedYaml = (destinationPath, style) => {
    const styleYAML = js_yaml_1.default.dump(style);
    let stylePath = path_1.default.resolve(process.cwd(), destinationPath);
    // The `source` is absolute path.
    if (destinationPath.match(/^\//)) {
        stylePath = destinationPath;
    }
    try {
        fs_1.default.writeFileSync(stylePath, styleYAML);
    }
    catch (err) {
        throw `${stylePath}: Permission denied`;
    }
};
const writeDecompositedYaml = (destinationPath, style) => {
    const layers = [];
    for (let i = 0; i < style.layers.length; i++) {
        const layer = style.layers[i];
        const layerYml = js_yaml_1.default.dump(layer);
        const fileName = `${style.layers[i].id}.yml`;
        const dirName = path_1.default.join(path_1.default.dirname(destinationPath), 'layers');
        fs_1.default.mkdirSync(dirName, { recursive: true });
        fs_1.default.writeFileSync(path_1.default.join(dirName, fileName), layerYml);
        // @ts-ignore
        layers.push(`!!inc/file ${path_1.default.join('layers', fileName)}`);
    }
    style.layers = layers;
    fs_1.default.writeFileSync(destinationPath, js_yaml_1.default.dump(style).replace(/'\!\!inc\/file layers\/.+\.yml'/g, function (match) {
        return match.replace(/'/g, '');
    }));
};

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.convert = void 0;
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const readline_1 = __importDefault(require("readline"));
const yaml_writer_1 = require("../lib/yaml-writer");
const getDestinationPath = (destination, sourcePath = '') => {
    let destinationPath;
    if (destination) {
        if (destination.match(/^\//)) {
            destinationPath = destination;
        }
        else {
            destinationPath = path_1.default.resolve(process.cwd(), destination);
        }
    }
    else {
        if (sourcePath) {
            destinationPath = path_1.default.join(path_1.default.dirname(sourcePath), `${path_1.default.basename(sourcePath, '.json')}.yml`);
        }
        else {
            destinationPath = path_1.default.join(process.cwd(), 'style.yml');
        }
    }
    return destinationPath;
};
function convert(source, destination) {
    let style, sourcePath;
    if ('-' === source) {
        const rl = readline_1.default.createInterface({
            input: process.stdin,
            terminal: false,
        });
        const lines = [];
        rl.on('line', (line) => {
            lines.push(line);
        });
        rl.on('close', () => {
            const style = JSON.parse(lines.join(''));
            const destinationPath = getDestinationPath(destination);
            try {
                yaml_writer_1.writeYaml(destinationPath, style, false);
            }
            catch (err) {
                throw `${destinationPath}: Permission denied`;
            }
        });
    }
    else {
        sourcePath = path_1.default.resolve(process.cwd(), source);
        // The `source` is absolute path.
        if (source.match(/^\//)) {
            sourcePath = source;
        }
        if (!fs_1.default.existsSync(sourcePath)) {
            throw `${sourcePath}: No such file or directory`;
        }
        style = JSON.parse(fs_1.default.readFileSync(sourcePath, 'utf-8'));
        const destinationPath = getDestinationPath(destination, sourcePath);
        try {
            yaml_writer_1.writeYaml(destinationPath, style, false);
        }
        catch (err) {
            throw `${destinationPath}: Permission denied`;
        }
    }
}
exports.convert = convert;
